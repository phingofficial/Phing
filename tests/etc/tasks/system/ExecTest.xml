<?xml version="1.0" encoding="UTF-8"?>
<project name="ExecTaskTest" default="test">

    <if>
        <os family="mac">
        </os>
        <then>
            <property name="binPrefix" value="/usr/bin"/>
        </then>
        <else>
            <property name="binPrefix" value="/bin"/>
        </else>
    </if>

    <target name="testPropertySetCommandline">
        <exec executable="echo">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetDir">
        <exec executable="echo" dir=".">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetOs">
        <exec executable="echo" os="linux">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetEscape">
        <exec executable="echo" escape="true">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetPassthru">
        <exec executable="echo" passthru="true">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLogoutput">
        <exec executable="echo" logoutput="true">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetSpawn">
        <exec executable="echo" spawn="true">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetReturnProperty">
        <exec executable="echo" returnProperty="retval">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetOutputProperty">
        <exec executable="echo" outputProperty="outval">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetCheckreturn">
        <exec executable="echo" checkreturn="true">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetOutput">
        <exec executable="echo" output="outputfilename">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetError">
        <exec executable="echo" error="errorfilename">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLevelError">
        <exec executable="echo" level="error">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLevelWarning">
        <exec executable="echo" level="warning">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLevelInfo">
        <exec executable="echo" level="info">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLevelVerbose">
        <exec executable="echo" level="verbose">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLevelDebug">
        <exec executable="echo" level="debug">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testPropertySetLevelUnknown">
        <exec executable="echo" level="unknown">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testDoNotExecuteOnWrongOs">
        <exec executable="echo" os="unknownos">
            <arg value="this should not be executed"/>
        </exec>
    </target>

    <target name="testDoNotExecuteOnWrongOsFamily">
        <exec executable="echo" osfamily="unknownos">
            <arg value="this should not be executed"/>
        </exec>
    </target>

    <target name="testExecuteOnCorrectOs">
        <exec executable="echo" os="WINNT WIN32 Linux Darwin BSD">
            <arg value="this should be executed"/>
        </exec>
    </target>

    <target name="testExecuteOnCorrectOsFamily">

        <if>
            <os family="Unix"/>
            <then>
                <property name="current" value="unix"/>
            </then>
            <elseif>
                <os family="windows"/>
                <then>
                    <property name="current" value="windows"/>
                </then>
            </elseif>
            <elseif>
                <os family="mac"/>
                <then>
                    <property name="current" value="mac"/>
                </then>
            </elseif>
        </if>

        <exec executable="echo" osfamily="${current}">
            <arg value="this should be executed"/>
        </exec>
    </target>

    <target name="testFailOnNonExistingDir">
        <exec executable="echo" dir="/this/dir/does/not/exist">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testChangeToDir">
        <!-- this file is in phing/tests/etc/tasks/system/,
             and that we're on unix with "ls" available -->
        <exec executable="ls"
              dir="../../../Phing/Task/System/"/>
    </target>

    <target name="testCheckreturnTrue">
        <exec executable="true" checkreturn="true"/>
    </target>

    <target name="testCheckreturnFalse">
        <exec executable="false" checkreturn="true"/>
    </target>

    <target name="testOutputProperty">
        <exec executable="echo" outputProperty="execOutputProp">
            <arg value="foo"/>
        </exec>
        <echo>The output property's value is: "${execOutputProp}"</echo>
    </target>

    <target name="testReturnProperty">
        <exec executable="false" returnProperty="execReturnProp"/>
        <echo>The return property's value is: "${execReturnProp}"</echo>
    </target>

    <target name="testEscape">
        <!-- two spaces between foo and | are changed into one by echo
        since it sees three parameters only, not the spaces -->
        <exec executable="echo" escape="true">
            <arg value="foo | cat"/>
        </exec>
    </target>

    <target name="testPassthru">
        <exec executable="echo" passthru="true">
            <arg value="foo"/>
        </exec>
    </target>

    <target name="testOutput">
        <exec executable="echo" output="${execTmpFile}">
            <arg value="outfoo"/>
        </exec>
    </target>

    <target name="testError">
        <exec executable="php" error="${execTmpFile}">
            <arg value="./ExecTest-stderr.php"/>
            <arg value="errfoo"/>
        </exec>
    </target>

    <target name="testSpawn">
        <exec executable="sleep" spawn="true">
            <arg value="5"/>
        </exec>
    </target>


    <target name="testNestedArg">
        <exec executable="echo">
            <arg value="nested-arg"/>
            <arg value="b  ar"/>
        </exec>
    </target>

    <target name="testMissingExecutableAndCommand">
        <exec>
        </exec>
    </target>

    <target name="testEscapedArg">
        <if>
            <os family="windows"/>
            <then>
                <exec executable="cmd" outputProperty="outval">
                    <arg value="/C"/>
                    <arg line="echo abc$b3!SB"/>
                </exec>
            </then>
            <else>
                <exec executable="echo" escape="true" outputProperty="outval">
                    <arg value="abc$b3!SB"/>
                </exec>
            </else>
        </if>
    </target>

    <target name="testEscapedArgWithoutWhitespace">
        <exec executable="echo" escape="true">
            <arg value="foo|bar"/>
        </exec>
    </target>

    <target name="testNestedEnv">
        <property environment="env"/>
        <exec executable="phploc" outputProperty="envtest" resolveexecutable="true" searchpath="true">
            <env key="Path" path="${env.Path};${project.basedir}\..\..\..\..\vendor\bin"/>
            <arg value="-v"/>
        </exec>
    </target>

    <target name="testEnvVar">
        <if>
            <os family="windows"/>
            <then>
                <exec executable="cmd" outputProperty="hello">
                    <env key="HELLO" value="world"/>
                    <arg value="/C"/>
                    <arg line="echo %HELLO%"/>
                </exec>
            </then>
            <else>
                <exec executable="echo" outputProperty="hello">
                    <env key="HELLO" value="world"/>
                    <arg value="$HELLO"/>
                </exec>
            </else>
        </if>
        <echo msg="${hello}"/>
    </target>

    <target name="testMultipleEnvVars">
        <exec executable="php" outputProperty="outputProperty">
            <env key="HELLO" value="hello"/>
            <env key="WORLD" value="world"/>
            <arg value="-r"/>
            <arg value="print getEnv('HELLO') . ' ' . getEnv('WORLD');"/>
        </exec>
    </target>

    <target name="testSuggestion">
        <exec executable="curl">
            <arg value="--version"/>
        </exec>
    </target>
</project>
