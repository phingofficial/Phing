name: Phing CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  static_code_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      - uses: ramsey/composer-install@v1
        with:
          dependency-versions: 'locked'

      - name:  Static Code Analysis
        run: bin/phpcs -s -n --standard=./ruleset.xml classes test/classes

  test:
    needs:
      - static_code_analysis
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: true
      matrix:
        operating-system: [ ubuntu-latest, macos-latest, windows-latest ]
        php: [ '7.3', '7.4', '8.0' ]
        dependencies: [ 'lowest', 'locked' ]

    name: PHP ${{ matrix.php }} on ${{ matrix.operating-system }} with ${{ matrix.dependencies }} dependencies

    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: ${{ matrix.php }}

      - uses: ramsey/composer-install@v1
        with:
          dependency-versions: ${{ matrix.dependencies }}
          composer-options: ${{ matrix.composer-options }}

      - name: Test phing
        working-directory: test
        run: |
          echo "=== SETTING GIT IDENTITY ==="
          git config --global user.email "github-ci-build@phing.info"
          git config --global user.name "Phing Github Action"
          echo "=== RUN TESTS ==="
          ../bin/phing -Dtests.codecoverage=false -listener "phing.listener.StatisticsListener"

  build_phar:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          ini-values: phar.readonly=Off
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --optimize-autoloader --prefer-dist --no-progress --no-interaction

      - name: Build phar
        working-directory: build
        run: |
          ../bin/phing
          php full/phing-$(cat ../etc/VERSION.TXT).phar -v

  coverage:
    runs-on: ubuntu-latest
    needs:
      - static_code_analysis
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      - uses: ramsey/composer-install@v1
        with:
          dependency-versions: 'locked'

      - name: Test with coverage
        working-directory: test
        run: |
          echo "=== SETTING GIT IDENTITY ==="
          git config --global user.email "github-ci-build@phing.info"
          git config --global user.name "Phing Github Action"
          echo "=== RUN TESTS ==="
          ../bin/phing -debug -Dtests.codecoverage=true -listener "phing.listener.StatisticsListener"

      - name: Transfer coverage
        run: |
          bash <(curl -s https://codecov.io/bash) -f ./test/reports/clover-coverage.xml
          wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=clover ./test/reports/clover-coverage.xml

  notify:
    runs-on: ubuntu-latest
    needs:
      - static_code_analysis
      - test
      - build_phar
      - coverage
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} succeeded in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_BUILDS }}
