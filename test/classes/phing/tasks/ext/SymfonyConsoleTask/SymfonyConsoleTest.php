<?php

require_once '../classes/phing/tasks/ext/SymfonyConsole/SymfonyConsoleTask.php';
require_once '../classes/phing/tasks/ext/SymfonyConsole/Arg.php';



/**
 * Test class for SymfonyConsole.
 * Generated by PHPUnit on 2012-02-13 at 12:20:00.
 */
class SymfonyConsoleTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var SymfonyConsole
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new SymfonyConsoleTask;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers SymfonyConsole::setCommand
     * @covers SymfonyConsole::getCommand
     */
    public function testSetGetCommand()
    {
        $o = $this->object;
        $o->setCommand('foo');
        $this->assertEquals('foo', $o->getCommand());
    }

    /**
     * @covers SymfonyConsole::setConsole
     * @covers SymfonyConsole::getConsole
     */
    public function testSetGetConsole()
    {
        $o = $this->object;
        $o->setConsole('foo');
        $this->assertEquals('foo', $o->getConsole());
    }

    /**
     * @covers SymfonyConsole::createArg
     */
    public function testCreateArg()
    {
        $o = $this->object;
        $arg = $o->createArg();
        $this->assertTrue(get_class($arg) == 'Arg');
    }

    /**
     * @covers SymfonyConsole::getArgs
     */
    public function testGetArgs()
    {
        $o = $this->object;
        $arg = $o->createArg();
        $arg = $o->createArg();
        $arg = $o->createArg();
        $this->assertTrue(count($o->getArgs()) == 3);
    }

    /**
     * @covers SymfonyConsole::getCmdString
     * @todo Implement testMain().
     */
    public function testGetCmdString()
    {
        $o = $this->object;
        $arg = $o->createArg();
        $arg->setName('name');
        $arg->setValue('value');

        $o->setCommand('command');
        $o->setConsole('console');

        $ret = "console command --name =value";

        $this->assertEquals($ret, $o->getCmdString());
    }
}
?>
